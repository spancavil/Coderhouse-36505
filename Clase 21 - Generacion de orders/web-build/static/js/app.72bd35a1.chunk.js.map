{"version":3,"sources":["Firebase/config.js","Context/ShopProvider.js","Styles/colors.js","Screens/Auth.js","Screens/Categories.js","Screens/Detail.js","Screens/Products.js","Navigation/Stacks/Shop.js","Components/CartItem.js","Screens/Cart.js","Navigation/Stacks/Cart.js","Screens/Orders.js","Navigation/Stacks/Orders.js","Navigation/Tabs/index.js","Navigation/index.js","App.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","auth","initializeAuth","persistence","getReactNativePersistence","AsyncStorage","Shop","createContext","ShopProvider","children","useState","products","setProducts","categories","setCategories","cart","setCart","useEffect","a","async","queryCollection","query","collection","queryCollectionCategories","getDocs","querySnapshot","querySnapshotCategories","productos","forEach","doc","producto","id","data","push","category","isInCart","find","elemento","console","log","Provider","value","addCart","product","quantityToAdd","quantity","cartFiltrado","filter","sumaTotal","reduce","acc","item","price","conteoItems","removeItem","auxCart","colors","Auth","email","setEmail","password","setPassword","loginView","setLoginView","View","style","styles","container","Text","TextInput","input","onChangeText","placeholder","secureTextEntry","TouchableOpacity","onPress","signInWithEmailAndPassword","then","userCredential","user","catch","error","errorCode","code","errorMessage","message","createUserWithEmailAndPassword","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","Categories","navigation","useContext","signOut","length","FlatList","renderItem","categoryID","navigate","keyExtractor","toString","ActivityIndicator","size","color","Detail","route","params","name","Image","source","uri","image","height","width","resizeMode","Products","productFilter","setProductFilter","species","title","handleDetail","ShopStack","Stack","createNativeStackNavigator","Navigator","initialRouteName","Screen","component","options","CartItem","handleRemove","Cart","total","setTotal","modalVisible","setModalVisible","nombre","setNombre","direccion","setDireccion","checkoutText","setCheckoutText","loadingCheckout","setLoadingCheckout","toFixed","Modal","animationType","transparent","visible","onRequestClose","modalParent","modalContainer","orderGenerada","buyer","items","createdAt","Date","toLocaleString","batch","writeBatch","outOfStock","prod","getDoc","documentSnapshot","stock","update","addDoc","commit","err","mensaje","CartStack","Orders","OrderStack","Tab","createBottomTabNavigator","TabNavigator","screenOptions","headerShown","MainNavigator","setUser","onAuthStateChanged","uid","NavigationContainer","App","LogBox","ignoreLogs"],"mappings":"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","file":"static/js/app.72bd35a1.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from 'firebase/firestore';\nimport { getAuth, initializeAuth } from \"firebase/auth\";\n\n// Solución async storage\nimport { getReactNativePersistence } from 'firebase/auth/react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCPNmLKTcYtSlZJkutsl0IwZCn2pBc7urw\",\n  authDomain: \"interbanking-react.firebaseapp.com\",\n  projectId: \"interbanking-react\",\n  storageBucket: \"interbanking-react.appspot.com\",\n  messagingSenderId: \"288953224143\",\n  appId: \"1:288953224143:web:3251134f1b42dbc2bf60ba\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);\n\n\nexport const auth = initializeAuth(app, {\n\n  persistence: getReactNativePersistence(AsyncStorage),\n\n});\n","import { collection, getDocs, query } from \"firebase/firestore\";\nimport { createContext, useEffect, useState } from \"react\";\nimport { db } from \"../Firebase/config\";\n\nexport const Shop = createContext();\n\nconst ShopProvider = ({children}) => {\n\n    const [products, setProducts] = useState([])\n    const [categories, setCategories] = useState([])\n    const [cart, setCart] = useState([])\n\n    useEffect(()=> {\n\n        (async ()=>{\n            const queryCollection = query(collection(db, \"productos\"))\n            const queryCollectionCategories = query(collection(db, \"categories\"))\n            const querySnapshot = await getDocs(queryCollection);\n            const querySnapshotCategories = await getDocs(queryCollectionCategories)\n            const productos = []\n            querySnapshot.forEach((doc)=> {\n                const producto = {id: doc.id, ...doc.data()}\n                productos.push(producto)\n            })\n\n            const categories = []\n            querySnapshotCategories.forEach((doc)=> {\n                const category = {id: doc.id, ...doc.data()}\n                categories.push(category)\n            })\n\n            setProducts([...productos])\n            setCategories([...categories])\n        })()\n\n    }, [])\n\n    const addCart = (product, quantityToAdd) => {\n\n        const producto = isInCart(product);\n        console.log(producto);\n        if (producto) {\n            producto.quantity += quantityToAdd;\n            const cartFiltrado = cart.filter(elemento => elemento.id !== producto.id);\n            cartFiltrado.push(producto);\n            setCart(cartFiltrado);\n            //Deberíamos agregar la cantidad al producto existente\n        } else {\n            //Agregamos un nuevo objeto al carrito\n            setCart([...cart, { ...product, quantity: quantityToAdd }]);\n        }\n    }\n\n    //Función auxiliar que me determina si el producto está o no en el cart\n    const isInCart = (producto) => {\n        return cart.find(elemento => elemento.id === producto.id);\n    }\n\n    const sumaTotal = () => {\n        const suma = cart.reduce((acc, item) => acc += (item.price * item.quantity), 0)\n        return suma;\n    }\n\n    const conteoItems = () => {\n        const suma = cart.reduce((acc, item) => acc += (item.quantity), 0)\n        return suma;\n    }\n\n    const removeItem = (id) => {\n        const auxCart = cart.filter(item => item.id !== id);\n        setCart(auxCart);\n    }\n\n    console.log(cart);\n\n    // console.log(products);\n    // console.log(categories)\n\n    return(\n        <Shop.Provider value={{products, categories, addCart, cart, sumaTotal, conteoItems, removeItem}}>\n            {children}\n        </Shop.Provider>\n    )\n}\n\nexport default ShopProvider;","export const colors = {\n    darkBlue: \"#10002b\",\n    darkViolet: \"#3c096c\",\n    violet: \"#9d4edd\",\n    lightViolet: \"#e0aaff\",\n}","import { StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native'\nimport React, { useState } from 'react'\nimport { colors } from '../Styles/colors';\nimport { auth } from '../Firebase/config';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\n\nconst Auth = () => {\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const [loginView, setLoginView] = useState(false);\n\n    const handleSignup = () => {\n        if (email !== \"\" && password != \"\"){\n            createUserWithEmailAndPassword(auth, email, password)\n                .then((userCredential) => {\n                    // Signed in \n                    console.log(userCredential)\n                    const user = userCredential.user;\n                    // ...\n                })\n                .catch((error) => {\n                    const errorCode = error.code;\n                    const errorMessage = error.message;\n                    console.log(errorCode, errorMessage);\n                    // ..\n                    setEmail(\"\");\n                    setPassword(\"\");\n                })\n               \n        }\n    }\n\n    const handleLogin = () => {\n        if (email !== \"\" && password != \"\"){\n            signInWithEmailAndPassword(auth, email, password)\n                .then((userCredential) => {\n                    // Signed in \n                    const user = userCredential.user;\n                    console.log(user);\n                    // ...\n                })\n                .catch((error) => {\n                    const errorCode = error.code;\n                    const errorMessage = error.message;\n                    console.log(errorCode, errorMessage);\n                    setEmail(\"\");\n                    setPassword(\"\");\n                })\n            \n        }\n    }\n\n    return (\n        <View style={styles.container}>\n            <View>\n                <Text>{loginView ? 'Login' : 'Registro de usuario'}</Text>\n                <TextInput\n                    style={styles.input}\n                    value={email}\n                    onChangeText={setEmail}\n                    placeholder=\"Ingrese email\"\n                ></TextInput>\n                <TextInput\n                    style={styles.input}\n                    secureTextEntry={true}\n                    value={password}\n                    onChangeText={setPassword}\n                    placeholder=\"Ingrese password\"\n                ></TextInput>\n                {loginView ?\n                    <TouchableOpacity onPress={handleLogin}>\n                        <Text>Login</Text>\n                    </TouchableOpacity>\n                    :\n                    <TouchableOpacity onPress={handleSignup}>\n                        <Text>Sign up</Text>\n                    </TouchableOpacity>\n                }\n                <View>\n                    <Text>{loginView ? 'No tienes usuario?' : 'Ya tienes usuario?'}</Text>\n                    <TouchableOpacity\n                        onPress={() => setLoginView(!loginView)}>\n                        <Text>\n                            {loginView ? 'sign up' : 'sign in'}\n                        </Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        </View>\n    )\n}\n\nexport default Auth\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: colors.lightViolet\n    },\n    input: {\n\n    },\n})","import { signOut } from 'firebase/auth';\nimport { useContext, useEffect, useState } from 'react';\nimport { Text, Button, View, FlatList, TouchableOpacity, ActivityIndicator } from 'react-native'\nimport { Shop } from '../Context/ShopProvider';\nimport { auth } from '../Firebase/config';\nimport { fetching } from '../Services/fetch';\n\nconst Categories = ({ navigation }) => {\n\n  const {categories} = useContext(Shop);\n\n  const handleCategory = (categoryID) => {\n    //console.log(categoryID);\n    navigation.navigate('Products', {\n      category: categoryID\n    })\n  }\n\n  const handleSignOut = () => {\n    signOut(auth).then(() => {\n      // Sign-out successful.\n    }).catch((error) => {\n      // An error happened.\n    });\n  }\n\n  return (\n    <View>\n      <TouchableOpacity onPress={handleSignOut}>\n        <Text>\n          Sign out\n        </Text>\n      </TouchableOpacity>\n      <Text>Categories</Text>\n      {categories.length !== 0 ? \n        <FlatList\n          \n          data={categories}\n          renderItem={( {item} ) => {\n            return <TouchableOpacity\n              onPress={() => handleCategory(item.category)}\n            >\n              <Text>\n                {item.category}\n              </Text>\n            </TouchableOpacity>\n          }\n          }\n          keyExtractor={item => item.id.toString()}\n        />\n        :\n        <ActivityIndicator size={\"large\"} color={\"blue\"}/>\n      }\n    </View>\n  )\n}\n\nexport default Categories","import { useContext } from 'react';\nimport {View, Text, Image, TouchableOpacity} from 'react-native';\nimport { Shop } from '../Context/ShopProvider';\n\nconst Detail = ({navigation, route}) => {\n\n  const {item} = route.params;\n\n  const {addCart} = useContext(Shop);\n\n  const handleAdd = () => {\n    addCart(item, 1)\n  }\n\n  return (\n      <View>\n          <Text>{item.name}</Text>\n          <Image \n            source={{uri: item.image}}\n            style = {{\n              height: 200,\n              width: '95%',\n            }}\n            resizeMode = \"cover\"\n          />\n          <Text>{item.price}</Text>\n          <TouchableOpacity onPress={handleAdd}>\n            <Text>Add to cart</Text>\n          </TouchableOpacity>\n      </View>\n  )\n}\n\nexport default Detail","import { useContext, useEffect, useState } from 'react';\nimport {Text, View, ActivityIndicator, FlatList, TouchableOpacity} from 'react-native';\nimport { Shop } from '../Context/ShopProvider';\nimport { fetching } from '../Services/fetch';\n\nconst Products = ({navigation, route}) => {\n  const {category} = route.params;\n\n  const {products} = useContext(Shop);\n\n  const [productFilter, setProductFilter] = useState([])\n\n  useEffect(()=> {\n\n    (async ()=>{\n      const productFilter = products.filter(product => product.species === category)\n      setProductFilter(productFilter);\n    })()\n\n  }, [category])\n\n  const handleDetail = (item) => {\n    navigation.navigate('Detail', {\n      id: item.id,\n      title: item.name,\n      item: item,\n    })\n  }\n\n  return (\n    <View>\n      <Text>Products</Text>\n      {products.length !== 0 ? \n        <FlatList\n          data={productFilter}\n          renderItem={( {item} ) => {\n            return <TouchableOpacity\n              onPress={() => handleDetail(item)}\n            >\n              <Text>\n                {item.name}\n              </Text>\n            </TouchableOpacity>\n          }\n          }\n          keyExtractor={item => item.id.toString()}\n        />\n        :\n        <ActivityIndicator size={\"large\"} color={\"blue\"}/>\n      }\n    </View>\n  )\n}\n\nexport default Products","import { createNativeStackNavigator } from \"@react-navigation/native-stack\"\nimport Categories from \"../../Screens/Categories\";\nimport Detail from \"../../Screens/Detail\";\nimport Products from \"../../Screens/Products\";\n\nconst ShopStack = () => {\n\n    const Stack = createNativeStackNavigator();\n\n    return (\n        <Stack.Navigator\n            initialRouteName=\"Categories\"\n        >\n            <Stack.Screen\n                name=\"Categories\"\n                component={Categories}\n                options={{ title: \"Categories\" }}\n            />\n            <Stack.Screen\n                name=\"Products\"\n                component={Products}\n                options={({ route }) => ({ title: route.params.category })} />\n            <Stack.Screen\n                name=\"Detail\"\n                component={Detail}\n                options={({ route }) => ({ title: route.params.title })} />\n        </Stack.Navigator>\n    )\n}\n\nexport default ShopStack;","import { StyleSheet, Text, TouchableOpacity, View } from 'react-native'\nimport React from 'react'\n\nconst CartItem = ({item, handleRemove}) => {\n  return (\n    <View>\n      <Text>{item.name}, qty: {item.quantity}, total: ${item.price * item.quantity}</Text>\n      <TouchableOpacity onPress={()=> handleRemove(item.id)}>\n          <Text>Eliminar</Text>\n      </TouchableOpacity>\n    </View>\n  )\n}\n\nexport default CartItem\n\nconst styles = StyleSheet.create({})","import { ActivityIndicator, FlatList, Modal, StyleSheet, Text, TextInput, Touchable, TouchableOpacity, View } from 'react-native'\nimport React, { useContext, useEffect, useState } from 'react'\nimport { Shop } from '../Context/ShopProvider'\nimport CartItem from '../Components/CartItem'\nimport { colors } from '../Styles/colors'\nimport { addDoc, collection, doc, getDoc, writeBatch } from 'firebase/firestore'\nimport { db } from '../Firebase/config'\n\nconst Cart = () => {\n\n  const [total, setTotal] = useState(0);\n  const [modalVisible, setModalVisible] = useState(false)\n  const [nombre, setNombre] = useState(\"\")\n  const [direccion, setDireccion] = useState(\"\")\n  const [checkoutText, setCheckoutText] = useState(\"\")\n  const [loadingCheckout, setLoadingCheckout] = useState(false)\n\n  const value = useContext(Shop);\n\n  const fnRender = ({ item }) => {\n    return (\n      <CartItem\n        item={item}\n        handleRemove={value.removeItem}\n      />\n    )\n  }\n\n  useEffect(() => {\n    setTotal(value.sumaTotal())\n  }, [value.cart])\n\n  const handlePurchase = () => {\n    // console.log(\"Se realizo la compra\");\n    // console.log(nombre, direccion);\n    if (nombre === \"\" || direccion === \"\") {\n      return\n    }\n    const orderGenerada = {\n      buyer: {\n        nombre: nombre,\n        direccion: direccion\n      },\n      items: value.cart\n      ,\n      total: total,\n      createdAt: new Date().toLocaleString()\n    }\n\n    //Primer paso: abrir un batch\n    const batch = writeBatch(db)//ver en qué level colocarlo\n\n    //Array auxiliar que me define si hay productos fuera de stock\n    const outOfStock = []\n\n    //Chequear el stock del producto en nuestra db y restarlo a la cantidad, si corresponde\n    value.cart.forEach((prod) => {\n      setLoadingCheckout(true)\n      getDoc(doc(db, 'productos', prod.id))\n        .then((documentSnapshot) => {\n          if (documentSnapshot.data().stock >= prod.quantity) {\n            batch.update(doc(db, 'productos', documentSnapshot.id), {\n              stock: documentSnapshot.data().stock - prod.quantity\n            })\n          } else {\n            outOfStock.push({ id: documentSnapshot.id, ...documentSnapshot.data() })\n          }\n          console.log(outOfStock);\n\n          if (outOfStock.length === 0) {\n            addDoc(collection(db, 'orders'), orderGenerada).then(({ id }) => {\n              batch.commit().then(() => {\n                setCheckoutText(`Se genero la order con id:  + ${id}`)\n              })\n            }).catch((err) => {\n              console.log(`Error: ${err.message}`);\n              setCheckoutText(`Error: ${err.message}`)\n            })\n          } else {\n            let mensaje = ''\n            for (const producto of outOfStock) {\n              mensaje += `${producto.name} `\n            }\n            setCheckoutText(`Productos fuera de stock: ${mensaje}`)\n          }\n\n          setLoadingCheckout(false)\n        })\n    })\n  }\n\n  return (\n    <View>\n      {value.cart.length !== 0 ?\n        <>\n          <Text>Cart</Text>\n          <FlatList\n            data={value.cart}\n            keyExtractor={item => item.id}\n            renderItem={fnRender}\n          >\n          </FlatList>\n          <View>\n            <Text>Total: {(total.toFixed(1))}</Text>\n            <TouchableOpacity onPress={() => setModalVisible(true)}>\n              <Text>Purchase</Text>\n            </TouchableOpacity>\n          </View>\n        </>\n        :\n        <Text>No hay productos en el cart</Text>\n      }\n      {/* Este modal debería ser un componente aparte */}\n      <Modal\n        animationType='slide'\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => {\n          setModalVisible(false)\n        }}\n      >\n        <View style={styles.modalParent}>\n          <View style={styles.modalContainer}>\n            <TouchableOpacity onPress={() => setModalVisible(false)}>\n              <Text>X</Text>\n            </TouchableOpacity>\n            <TextInput \n              placeholder='Ingresar nombre'\n              onChangeText={setNombre}\n              value={nombre}\n            />\n            <TextInput \n              placeholder='Ingresar direccion'\n              onChangeText={setDireccion}\n              value={direccion}\n            />\n            <Text>¿Quieres confirmar la compra?</Text>\n            <TouchableOpacity onPress={() => setModalVisible(false)}>\n              <Text>Cancelar</Text>\n            </TouchableOpacity>\n            <TouchableOpacity onPress={handlePurchase}>\n              <Text>Confirmar</Text>\n            </TouchableOpacity>\n            {loadingCheckout && <ActivityIndicator size={'small'} color={\"green\"}/>}\n            {!loadingCheckout && <Text>{checkoutText}</Text>}\n          </View>\n        </View>\n      </Modal>\n    </View>\n  )\n}\n\nexport default Cart\n\nconst styles = StyleSheet.create({\n  modalParent: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modalContainer: {\n    height: 500,\n    width: 300,\n    backgroundColor: colors.lightViolet,\n  }\n})","import React from 'react'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\nimport Cart from '../../Screens/Cart';\n\nconst CartStack = () => {\n\n    const Stack = createNativeStackNavigator();\n\n    return (\n        <Stack.Navigator>\n            <Stack.Screen\n                name=\"Carrito\"\n                component={Cart}\n                options={{\n                    title: \"Cart\"\n                }}\n            />\n        </Stack.Navigator>\n    )\n}\n\nexport default CartStack","import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\n\nconst Orders = () => {\n  return (\n    <View>\n      <Text>Orders</Text>\n    </View>\n  )\n}\n\nexport default Orders\n\nconst styles = StyleSheet.create({})","import React from 'react'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\nimport Orders from '../../Screens/Orders';\n\nconst OrderStack = () => {\n\n    const Stack = createNativeStackNavigator();\n\n    return (\n        <Stack.Navigator>\n            <Stack.Screen\n                name=\"Ordenes\"\n                component={Orders}\n                options={{\n                    title: \"Orders\"\n                }}\n            />\n        </Stack.Navigator>\n    )\n}\n\nexport default OrderStack","import { View, Text } from 'react-native'\nimport React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport ShopStack from '../Stacks/Shop';\nimport CartStack from '../Stacks/Cart';\nimport OrderStack from '../Stacks/Orders';\nimport { NavigationContainer } from '@react-navigation/native';\n\nconst Tab = createBottomTabNavigator();\n\nconst TabNavigator = () => {\n\n    return (\n            <Tab.Navigator\n            screenOptions={{\n                headerShown: false\n            }}\n            >\n                <Tab.Screen name=\"Shop\" component={ShopStack} />\n                <Tab.Screen name=\"Cart\" component={CartStack} />\n                <Tab.Screen name=\"Orders\" component={OrderStack}/>\n            </Tab.Navigator>\n    );\n}\n\nexport default TabNavigator","import { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\"\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { useEffect, useState } from \"react\";\nimport { auth } from \"../Firebase/config\";\nimport Auth from \"../Screens/Auth\";\nimport TabNavigator from \"./Tabs\";\n\nconst MainNavigator = () => {\n\n    const [user, setUser] = useState(null);\n    \n    useEffect(() => {\n        onAuthStateChanged(auth, (user) => {\n            if (user) {\n                setUser(user)\n                // User is signed in, see docs for a list of available properties\n                // https://firebase.google.com/docs/reference/js/firebase.User\n                const uid = user.uid;\n                // ...\n            } else {\n                setUser(null)\n                // User is signed out\n                // ...\n            }\n        });\n    }, [])\n\n    const Stack = createNativeStackNavigator();\n\n\n    return (\n        <NavigationContainer>\n            {user ?\n                <TabNavigator></TabNavigator>\n                :\n                <Auth />\n            }\n        </NavigationContainer>\n    )\n}\n\nexport default MainNavigator","import { LogBox } from 'react-native';\nimport ShopProvider from './Context/ShopProvider';\nimport MainNavigator from './Navigation';\n\nexport default function App() {\n\n  LogBox.ignoreLogs([\"timer\"])\n  return (\n    <ShopProvider>\n      <MainNavigator/>\n    </ShopProvider>\n  );\n}\n"],"sourceRoot":""}